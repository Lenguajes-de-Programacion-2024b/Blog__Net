// <auto-generated />
using System;
using Blog__Net.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog__Net.Migrations
{
    [DbContext(typeof(DbBlogContext))]
    partial class DbBlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blog__Net.Models.Comments", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int?>("CommentgrandparentId")
                        .HasColumnType("int");

                    b.Property<int?>("CommentparentId")
                        .HasColumnType("int");

                    b.Property<int?>("CommentsCommentId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("Creationdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.HasKey("CommentId")
                        .HasName("PK__Comments__C3B4DFCA00CE2FF2");

                    b.HasIndex("CommentparentId");

                    b.HasIndex("CommentsCommentId");

                    b.HasIndex("IdUser");

                    b.HasIndex("PostId");

                    b.ToTable("Comments", t =>
                        {
                            t.HasTrigger("tr_DeleteCommentson");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("Blog__Net.Models.InfoUser", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Passcode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUser")
                        .HasName("PK__InfoUser__B7C926389D8E24CE");

                    b.HasIndex("RolId");

                    b.ToTable("InfoUser", (string)null);
                });

            modelBuilder.Entity("Blog__Net.Models.PostLike", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LikeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("PostsPostId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostsPostId");

                    b.ToTable("PostLike");
                });

            modelBuilder.Entity("Blog__Net.Models.Posts", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<int>("Category")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("Publicationdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("likesCount")
                        .HasColumnType("int");

                    b.HasKey("PostId")
                        .HasName("PK__Posts__AA126018E263DA79");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Blog__Net.Models.Roles", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("RolName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RolId")
                        .HasName("PK__Roles__F92302F11E40ABEB");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Blog__Net.Models.Comments", b =>
                {
                    b.HasOne("Blog__Net.Models.Comments", "Commentparent")
                        .WithMany("InverseCommentparent")
                        .HasForeignKey("CommentparentId")
                        .HasConstraintName("fk_Posts_CommentparentId");

                    b.HasOne("Blog__Net.Models.Comments", null)
                        .WithMany("SonComments")
                        .HasForeignKey("CommentsCommentId");

                    b.HasOne("Blog__Net.Models.InfoUser", "IdUserNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_Comments_IdUser");

                    b.HasOne("Blog__Net.Models.Posts", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_Comments_PostId");

                    b.Navigation("Commentparent");

                    b.Navigation("IdUserNavigation");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Blog__Net.Models.InfoUser", b =>
                {
                    b.HasOne("Blog__Net.Models.Roles", "Rol")
                        .WithMany("InfoUsers")
                        .HasForeignKey("RolId")
                        .HasConstraintName("fk_InfoUser_Roles");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Blog__Net.Models.PostLike", b =>
                {
                    b.HasOne("Blog__Net.Models.Posts", null)
                        .WithMany("Likes")
                        .HasForeignKey("PostsPostId");
                });

            modelBuilder.Entity("Blog__Net.Models.Comments", b =>
                {
                    b.Navigation("InverseCommentparent");

                    b.Navigation("SonComments");
                });

            modelBuilder.Entity("Blog__Net.Models.InfoUser", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Blog__Net.Models.Posts", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Blog__Net.Models.Roles", b =>
                {
                    b.Navigation("InfoUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
